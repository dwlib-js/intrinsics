'use strict';

const {
  AggregateError,
  AggregateErrorPrototype,
  Array,
  ArrayFrom,
  ArrayIsArray,
  ArrayOf,
  ArrayPrototype,
  ArrayPrototypeAt,
  ArrayPrototypeConcat,
  ArrayPrototypeCopyWithin,
  ArrayPrototypeEntries,
  ArrayPrototypeEvery,
  ArrayPrototypeFill,
  ArrayPrototypeFilter,
  ArrayPrototypeFind,
  ArrayPrototypeFindIndex,
  ArrayPrototypeFlat,
  ArrayPrototypeFlatMap,
  ArrayPrototypeForEach,
  ArrayPrototypeIncludes,
  ArrayPrototypeIndexOf,
  ArrayPrototypeJoin,
  ArrayPrototypeKeys,
  ArrayPrototypeLastIndexOf,
  ArrayPrototypeMap,
  ArrayPrototypePop,
  ArrayPrototypePush,
  ArrayPrototypeReduce,
  ArrayPrototypeReduceRight,
  ArrayPrototypeReverse,
  ArrayPrototypeShift,
  ArrayPrototypeSlice,
  ArrayPrototypeSome,
  ArrayPrototypeSort,
  ArrayPrototypeSplice,
  ArrayPrototypeToLocaleString,
  ArrayPrototypeToString,
  ArrayPrototypeUnshift,
  ArrayPrototypeValues,
  ArrayPrototypeSymbolIterator,
  ArrayPrototypeSymbolUnscopables,
  ArrayForEach,
  ArrayBuffer,
  ArrayBufferIsView,
  ArrayBufferPrototype,
  ArrayBufferPrototypeByteLength,
  ArrayBufferPrototypeSlice,
  ArrayBufferPrototypeSymbolToStringTag,
  ArrayIteratorPrototype,
  ArrayIteratorPrototypeNext,
  ArrayIteratorPrototypeSymbolToStringTag,
  AsyncFunction,
  AsyncFunctionPrototype,
  AsyncFunctionPrototypeSymbolToStringTag,
  AsyncGeneratorFunction,
  AsyncGeneratorFunctionPrototype,
  AsyncGeneratorFunctionPrototypeSymbolToStringTag,
  AsyncGeneratorPrototype,
  AsyncGeneratorPrototypeNext,
  AsyncGeneratorPrototypeReturn,
  AsyncGeneratorPrototypeThrow,
  AsyncGeneratorPrototypeSymbolToStringTag,
  AsyncIteratorPrototype,
  AsyncIteratorPrototypeSymbolAsyncIterator,
  Atomics,
  AtomicsAdd,
  AtomicsAnd,
  AtomicsCompareExchange,
  AtomicsExchange,
  AtomicsIsLockFree,
  AtomicsLoad,
  AtomicsOr,
  AtomicsStore,
  AtomicsSub,
  AtomicsWait,
  AtomicsNotify,
  AtomicsXor,
  AtomicsSymbolToStringTag,
  BigInt,
  BigIntAsIntN,
  BigIntAsUintN,
  BigIntPrototype,
  BigIntPrototypeToLocaleString,
  BigIntPrototypeToString,
  BigIntPrototypeValueOf,
  BigIntPrototypeSymbolToStringTag,
  BigInt64Array,
  BigInt64ArrayBYTES_PER_ELEMENT,
  BigInt64ArrayPrototype,
  BigUint64Array,
  BigUint64ArrayBYTES_PER_ELEMENT,
  BigUint64ArrayPrototype,
  Boolean,
  BooleanPrototype,
  BooleanPrototypeToString,
  BooleanPrototypeValueOf,
  DataView,
  DataViewPrototype,
  DataViewPrototypeBuffer,
  DataViewPrototypeByteLength,
  DataViewPrototypeByteOffset,
  DataViewPrototypeGetBigInt64,
  DataViewPrototypeGetBigUint64,
  DataViewPrototypeGetFloat32,
  DataViewPrototypeGetFloat64,
  DataViewPrototypeGetInt8,
  DataViewPrototypeGetInt16,
  DataViewPrototypeGetInt32,
  DataViewPrototypeGetUint8,
  DataViewPrototypeGetUint16,
  DataViewPrototypeGetUint32,
  DataViewPrototypeSetBigInt64,
  DataViewPrototypeSetBigUint64,
  DataViewPrototypeSetFloat32,
  DataViewPrototypeSetFloat64,
  DataViewPrototypeSetInt8,
  DataViewPrototypeSetInt16,
  DataViewPrototypeSetInt32,
  DataViewPrototypeSetUint8,
  DataViewPrototypeSetUint16,
  DataViewPrototypeSetUint32,
  DataViewPrototypeSymbolToStringTag,
  Date,
  DateUTC,
  DateNow,
  DateParse,
  DatePrototype,
  DatePrototypeGetDate,
  DatePrototypeGetDay,
  DatePrototypeGetFullYear,
  DatePrototypeGetHours,
  DatePrototypeGetMilliseconds,
  DatePrototypeGetMinutes,
  DatePrototypeGetMonth,
  DatePrototypeGetSeconds,
  DatePrototypeGetTime,
  DatePrototypeGetTimezoneOffset,
  DatePrototypeGetUTCDate,
  DatePrototypeGetUTCDay,
  DatePrototypeGetUTCFullYear,
  DatePrototypeGetUTCHours,
  DatePrototypeGetUTCMilliseconds,
  DatePrototypeGetUTCMinutes,
  DatePrototypeGetUTCMonth,
  DatePrototypeGetUTCSeconds,
  DatePrototypeSetDate,
  DatePrototypeSetFullYear,
  DatePrototypeSetHours,
  DatePrototypeSetMilliseconds,
  DatePrototypeSetMinutes,
  DatePrototypeSetMonth,
  DatePrototypeSetSeconds,
  DatePrototypeSetTime,
  DatePrototypeSetUTCDate,
  DatePrototypeSetUTCFullYear,
  DatePrototypeSetUTCHours,
  DatePrototypeSetUTCMilliseconds,
  DatePrototypeSetUTCMinutes,
  DatePrototypeSetUTCMonth,
  DatePrototypeSetUTCSeconds,
  DatePrototypeToDateString,
  DatePrototypeToISOString,
  DatePrototypeToJSON,
  DatePrototypeToLocaleDateString,
  DatePrototypeToLocaleString,
  DatePrototypeToLocaleTimeString,
  DatePrototypeToString,
  DatePrototypeToTimeString,
  DatePrototypeToUTCString,
  DatePrototypeValueOf,
  DatePrototypeSymbolToPrimitive,
  Error,
  ErrorPrototype,
  ErrorPrototypeToString,
  EvalError,
  EvalErrorPrototype,
  FinalizationRegistry,
  FinalizationRegistryPrototype,
  FinalizationRegistryPrototypeRegister,
  FinalizationRegistryPrototypeUnregister,
  FinalizationRegistryPrototypeSymbolToStringTag,
  Float32Array,
  Float32ArrayBYTES_PER_ELEMENT,
  Float32ArrayPrototype,
  Float64Array,
  Float64ArrayBYTES_PER_ELEMENT,
  Float64ArrayPrototype,
  Function,
  FunctionPrototype,
  FunctionPrototypeApply,
  FunctionPrototypeBind,
  FunctionPrototypeCall,
  FunctionPrototypeToString,
  FunctionPrototypeSymbolHasInstance,
  FunctionBind,
  GeneratorFunction,
  GeneratorFunctionPrototype,
  GeneratorFunctionPrototypeSymbolToStringTag,
  GeneratorPrototype,
  GeneratorPrototypeNext,
  GeneratorPrototypeReturn,
  GeneratorPrototypeThrow,
  GeneratorPrototypeSymbolToStringTag,
  Int8Array,
  Int8ArrayBYTES_PER_ELEMENT,
  Int8ArrayPrototype,
  Int16Array,
  Int16ArrayBYTES_PER_ELEMENT,
  Int16ArrayPrototype,
  Int32Array,
  Int32ArrayBYTES_PER_ELEMENT,
  Int32ArrayPrototype,
  IteratorPrototype,
  IteratorPrototypeSymbolIterator,
  JSON,
  JSONParse,
  JSONStringify,
  JSONSymbolToStringTag,
  Map,
  MapPrototype,
  MapPrototypeClear,
  MapPrototypeDelete,
  MapPrototypeEntries,
  MapPrototypeForEach,
  MapPrototypeGet,
  MapPrototypeHas,
  MapPrototypeKeys,
  MapPrototypeSet,
  MapPrototypeSize,
  MapPrototypeValues,
  MapPrototypeSymbolIterator,
  MapPrototypeSymbolToStringTag,
  MapIteratorPrototype,
  MapIteratorPrototypeNext,
  MapIteratorPrototypeSymbolToStringTag,
  Math,
  MathE,
  MathLN10,
  MathLN2,
  MathLOG10E,
  MathLOG2E,
  MathPI,
  MathSQRT1_2,
  MathSQRT2,
  MathAbs,
  MathAcos,
  MathAcosh,
  MathAsin,
  MathAsinh,
  MathAtan,
  MathAtanh,
  MathAtan2,
  MathCbrt,
  MathCeil,
  MathClz32,
  MathCos,
  MathCosh,
  MathExp,
  MathExpm1,
  MathFloor,
  MathFround,
  MathHypot,
  MathImul,
  MathLog,
  MathLog1p,
  MathLog10,
  MathLog2,
  MathMax,
  MathMin,
  MathPow,
  MathRandom,
  MathRound,
  MathSign,
  MathSin,
  MathSinh,
  MathSqrt,
  MathTan,
  MathTanh,
  MathTrunc,
  MathSymbolToStringTag,
  Number,
  NumberEPSILON,
  NumberMAX_SAFE_INTEGER,
  NumberMAX_VALUE,
  NumberMIN_SAFE_INTEGER,
  NumberMIN_VALUE,
  NumberNaN,
  NumberNEGATIVE_INFINITY,
  NumberPOSITIVE_INFINITY,
  NumberIsFinite,
  NumberIsInteger,
  NumberIsNaN,
  NumberIsSafeInteger,
  NumberParseFloat,
  NumberParseInt,
  NumberPrototype,
  NumberPrototypeToExponential,
  NumberPrototypeToFixed,
  NumberPrototypeToLocaleString,
  NumberPrototypeToPrecision,
  NumberPrototypeToString,
  NumberPrototypeValueOf,
  Object,
  ObjectAssign,
  ObjectCreate,
  ObjectDefineProperties,
  ObjectDefineProperty,
  ObjectEntries,
  ObjectFreeze,
  ObjectFromEntries,
  ObjectGetOwnPropertyDescriptor,
  ObjectGetOwnPropertyDescriptors,
  ObjectGetOwnPropertyNames,
  ObjectGetOwnPropertySymbols,
  ObjectGetPrototypeOf,
  ObjectHasOwn,
  ObjectIs,
  ObjectIsExtensible,
  ObjectIsFrozen,
  ObjectIsSealed,
  ObjectKeys,
  ObjectPreventExtensions,
  ObjectSeal,
  ObjectSetPrototypeOf,
  ObjectValues,
  ObjectPrototype,
  ObjectPrototypeHasOwnProperty,
  ObjectPrototypeIsPrototypeOf,
  ObjectPrototypePropertyIsEnumerable,
  ObjectPrototypeToLocaleString,
  ObjectPrototypeToString,
  ObjectPrototypeValueOf,
  Promise,
  $PromiseAll,
  $PromiseAllSettled,
  $PromiseAny,
  $PromiseRace,
  $PromiseReject,
  $PromiseResolve,
  PromisePrototype,
  PromisePrototypeCatch,
  PromisePrototypeFinally,
  PromisePrototypeThen,
  PromisePrototypeSymbolToStringTag,
  Proxy,
  ProxyRevocable,
  RangeError,
  RangeErrorPrototype,
  ReferenceError,
  ReferenceErrorPrototype,
  Reflect,
  ReflectApply,
  ReflectConstruct,
  ReflectDefineProperty,
  ReflectDeleteProperty,
  ReflectGet,
  ReflectGetOwnPropertyDescriptor,
  ReflectGetPrototypeOf,
  ReflectHas,
  ReflectIsExtensible,
  ReflectOwnKeys,
  ReflectPreventExtensions,
  ReflectSet,
  ReflectSymbolToStringTag,
  RegExp,
  RegExpPrototype,
  RegExpPrototypeDotAll,
  RegExpPrototypeExec,
  RegExpPrototypeFlags,
  RegExpPrototypeGlobal,
  RegExpPrototypeIgnoreCase,
  RegExpPrototypeMultiline,
  RegExpPrototypeSource,
  RegExpPrototypeSticky,
  RegExpPrototypeTest,
  RegExpPrototypeToString,
  RegExpPrototypeUnicode,
  RegExpPrototypeSymbolMatch,
  RegExpPrototypeSymbolMatchAll,
  RegExpPrototypeSymbolReplace,
  RegExpPrototypeSymbolSearch,
  RegExpPrototypeSymbolSplit,
  RegExpStringIteratorPrototype,
  RegExpStringIteratorPrototypeNext,
  RegExpStringIteratorPrototypeSymbolToStringTag,
  Set,
  SetPrototype,
  SetPrototypeAdd,
  SetPrototypeClear,
  SetPrototypeDelete,
  SetPrototypeEntries,
  SetPrototypeForEach,
  SetPrototypeHas,
  SetPrototypeKeys,
  SetPrototypeSize,
  SetPrototypeValues,
  SetPrototypeSymbolIterator,
  SetPrototypeSymbolToStringTag,
  SetIteratorPrototype,
  SetIteratorPrototypeNext,
  SetIteratorPrototypeSymbolToStringTag,
  SharedArrayBuffer,
  SharedArrayBufferPrototype,
  SharedArrayBufferPrototypeByteLength,
  SharedArrayBufferPrototypeSlice,
  SharedArrayBufferPrototypeSymbolToStringTag,
  String,
  StringFromCharCode,
  StringFromCodePoint,
  StringRaw,
  StringPrototype,
  StringPrototypeAt,
  StringPrototypeCharAt,
  StringPrototypeCharCodeAt,
  StringPrototypeCodePointAt,
  StringPrototypeConcat,
  StringPrototypeEndsWith,
  StringPrototypeIncludes,
  StringPrototypeIndexOf,
  StringPrototypeLastIndexOf,
  StringPrototypeLocaleCompare,
  StringPrototypeMatch,
  StringPrototypeMatchAll,
  StringPrototypeNormalize,
  StringPrototypePadEnd,
  StringPrototypePadStart,
  StringPrototypeRepeat,
  StringPrototypeReplace,
  StringPrototypeReplaceAll,
  StringPrototypeSearch,
  StringPrototypeSlice,
  StringPrototypeSplit,
  StringPrototypeStartsWith,
  StringPrototypeSubstring,
  StringPrototypeToLocaleLowerCase,
  StringPrototypeToLocaleUpperCase,
  StringPrototypeToLowerCase,
  StringPrototypeToString,
  StringPrototypeToUpperCase,
  StringPrototypeTrim,
  StringPrototypeTrimEnd,
  StringPrototypeTrimStart,
  StringPrototypeValueOf,
  StringPrototypeSymbolIterator,
  StringIteratorPrototype,
  StringIteratorPrototypeNext,
  StringIteratorPrototypeSymbolToStringTag,
  Symbol,
  SymbolAsyncIterator,
  SymbolFor,
  SymbolHasInstance,
  SymbolIsConcatSpreadable,
  SymbolIterator,
  SymbolKeyFor,
  SymbolMatch,
  SymbolMatchAll,
  SymbolReplace,
  SymbolSearch,
  SymbolSpecies,
  SymbolSplit,
  SymbolToPrimitive,
  SymbolToStringTag,
  SymbolUnscopables,
  SymbolPrototype,
  SymbolPrototypeDescription,
  SymbolPrototypeToString,
  SymbolPrototypeValueOf,
  SymbolPrototypeSymbolToPrimitive,
  SymbolPrototypeSymbolToStringTag,
  SyntaxError,
  SyntaxErrorPrototype,
  TypedArray,
  $TypedArrayFrom,
  $TypedArrayOf,
  TypedArrayPrototype,
  TypedArrayPrototypeAt,
  TypedArrayPrototypeBuffer,
  TypedArrayPrototypeByteLength,
  TypedArrayPrototypeByteOffset,
  TypedArrayPrototypeCopyWithin,
  TypedArrayPrototypeEntries,
  TypedArrayPrototypeEvery,
  TypedArrayPrototypeFill,
  TypedArrayPrototypeFilter,
  TypedArrayPrototypeFind,
  TypedArrayPrototypeFindIndex,
  TypedArrayPrototypeForEach,
  TypedArrayPrototypeIncludes,
  TypedArrayPrototypeIndexOf,
  TypedArrayPrototypeJoin,
  TypedArrayPrototypeKeys,
  TypedArrayPrototypeLastIndexOf,
  TypedArrayPrototypeLength,
  TypedArrayPrototypeMap,
  TypedArrayPrototypeReduce,
  TypedArrayPrototypeReduceRight,
  TypedArrayPrototypeReverse,
  TypedArrayPrototypeSet,
  TypedArrayPrototypeSlice,
  TypedArrayPrototypeSome,
  TypedArrayPrototypeSort,
  TypedArrayPrototypeSubarray,
  TypedArrayPrototypeToLocaleString,
  TypedArrayPrototypeToString,
  TypedArrayPrototypeValues,
  TypedArrayPrototypeSymbolIterator,
  TypedArrayPrototypeSymbolToStringTag,
  TypeError,
  TypeErrorPrototype,
  Uint8Array,
  Uint8ArrayBYTES_PER_ELEMENT,
  Uint8ArrayPrototype,
  Uint8ClampedArray,
  Uint8ClampedArrayBYTES_PER_ELEMENT,
  Uint8ClampedArrayPrototype,
  Uint16Array,
  Uint16ArrayBYTES_PER_ELEMENT,
  Uint16ArrayPrototype,
  Uint32Array,
  Uint32ArrayBYTES_PER_ELEMENT,
  Uint32ArrayPrototype,
  URIError,
  URIErrorPrototype,
  WeakMap,
  WeakMapPrototype,
  WeakMapPrototypeDelete,
  WeakMapPrototypeGet,
  WeakMapPrototypeHas,
  WeakMapPrototypeSet,
  WeakMapPrototypeSymbolToStringTag,
  WeakRef,
  WeakRefPrototype,
  WeakRefPrototypeDeref,
  WeakRefPrototypeSymbolToStringTag,
  WeakSet,
  WeakSetPrototype,
  WeakSetPrototypeAdd,
  WeakSetPrototypeDelete,
  WeakSetPrototypeHas,
  WeakSetPrototypeSymbolToStringTag,
  decodeURI,
  decodeURIComponent,
  encodeURI,
  encodeURIComponent,
  eval: $eval,
  globalThis,
  isFinite,
  isNaN,
  parseFloat,
  parseInt
} = require('@dwlib/primordials');
const IsString = require('@dwlib/abstract/IsString');

const INTRINSICS = new Map();

const $GetIntrinsic = FunctionBind(MapPrototypeGet, INTRINSICS);
const SetIntrinsic = FunctionBind(MapPrototypeSet, INTRINSICS);
const HasIntrinsic = FunctionBind(MapPrototypeHas, INTRINSICS);

ArrayForEach([
  ['AggregateError', AggregateError],
  ['AggregateError.prototype', AggregateErrorPrototype],
  ['Array', Array],
  ['Array.from', ArrayFrom],
  ['Array.isArray', ArrayIsArray],
  ['Array.of', ArrayOf],
  ['Array.prototype', ArrayPrototype],
  ['Array.prototype.at', ArrayPrototypeAt],
  ['Array.prototype.concat', ArrayPrototypeConcat],
  ['Array.prototype.copyWithin', ArrayPrototypeCopyWithin],
  ['Array.prototype.entries', ArrayPrototypeEntries],
  ['Array.prototype.every', ArrayPrototypeEvery],
  ['Array.prototype.fill', ArrayPrototypeFill],
  ['Array.prototype.filter', ArrayPrototypeFilter],
  ['Array.prototype.find', ArrayPrototypeFind],
  ['Array.prototype.findIndex', ArrayPrototypeFindIndex],
  ['Array.prototype.flat', ArrayPrototypeFlat],
  ['Array.prototype.flatMap', ArrayPrototypeFlatMap],
  ['Array.prototype.forEach', ArrayPrototypeForEach],
  ['Array.prototype.includes', ArrayPrototypeIncludes],
  ['Array.prototype.indexOf', ArrayPrototypeIndexOf],
  ['Array.prototype.join', ArrayPrototypeJoin],
  ['Array.prototype.keys', ArrayPrototypeKeys],
  ['Array.prototype.lastIndexOf', ArrayPrototypeLastIndexOf],
  ['Array.prototype.map', ArrayPrototypeMap],
  ['Array.prototype.pop', ArrayPrototypePop],
  ['Array.prototype.push', ArrayPrototypePush],
  ['Array.prototype.reduce', ArrayPrototypeReduce],
  ['Array.prototype.reduceRight', ArrayPrototypeReduceRight],
  ['Array.prototype.reverse', ArrayPrototypeReverse],
  ['Array.prototype.shift', ArrayPrototypeShift],
  ['Array.prototype.slice', ArrayPrototypeSlice],
  ['Array.prototype.some', ArrayPrototypeSome],
  ['Array.prototype.sort', ArrayPrototypeSort],
  ['Array.prototype.splice', ArrayPrototypeSplice],
  ['Array.prototype.toLocaleString', ArrayPrototypeToLocaleString],
  ['Array.prototype.toString', ArrayPrototypeToString],
  ['Array.prototype.unshift', ArrayPrototypeUnshift],
  ['Array.prototype.values', ArrayPrototypeValues],
  ['Array.prototype[@@iterator]', ArrayPrototypeSymbolIterator],
  ['Array.prototype[@@unscopables]', ArrayPrototypeSymbolUnscopables],
  ['ArrayBuffer', ArrayBuffer],
  ['ArrayBuffer.isView', ArrayBufferIsView],
  ['ArrayBuffer.prototype', ArrayBufferPrototype],
  ['get ArrayBuffer.prototype.byteLength', ArrayBufferPrototypeByteLength],
  ['ArrayBuffer.prototype.slice', ArrayBufferPrototypeSlice],
  ['ArrayBuffer.prototype[@@toStringTag]', ArrayBufferPrototypeSymbolToStringTag],
  ['ArrayIteratorPrototype', ArrayIteratorPrototype],
  ['ArrayIteratorPrototype.next', ArrayIteratorPrototypeNext],
  ['ArrayIteratorPrototype[@@toStringTag]', ArrayIteratorPrototypeSymbolToStringTag],
  ['AsyncFunction', AsyncFunction],
  ['AsyncFunction.prototype', AsyncFunctionPrototype],
  ['AsyncFunction.prototype[@@toStringTag]', AsyncFunctionPrototypeSymbolToStringTag],
  ['AsyncGeneratorFunction', AsyncGeneratorFunction],
  ['AsyncGeneratorFunction.prototype', AsyncGeneratorFunctionPrototype],
  ['AsyncGeneratorFunction.prototype[@@toStringTag]', AsyncGeneratorFunctionPrototypeSymbolToStringTag],
  ['AsyncGeneratorPrototype', AsyncGeneratorPrototype],
  ['AsyncGeneratorPrototype.next', AsyncGeneratorPrototypeNext],
  ['AsyncGeneratorPrototype.return', AsyncGeneratorPrototypeReturn],
  ['AsyncGeneratorPrototype.throw', AsyncGeneratorPrototypeThrow],
  ['AsyncGeneratorPrototype[@@toStringTag]', AsyncGeneratorPrototypeSymbolToStringTag],
  ['AsyncIteratorPrototype', AsyncIteratorPrototype],
  ['AsyncIteratorPrototype[@@asyncIterator]', AsyncIteratorPrototypeSymbolAsyncIterator],
  ['Atomics', Atomics],
  ['Atomics.add', AtomicsAdd],
  ['Atomics.and', AtomicsAnd],
  ['Atomics.compareExchange', AtomicsCompareExchange],
  ['Atomics.exchange', AtomicsExchange],
  ['Atomics.isLockFree', AtomicsIsLockFree],
  ['Atomics.load', AtomicsLoad],
  ['Atomics.or', AtomicsOr],
  ['Atomics.store', AtomicsStore],
  ['Atomics.sub', AtomicsSub],
  ['Atomics.wait', AtomicsWait],
  ['Atomics.notify', AtomicsNotify],
  ['Atomics.xor', AtomicsXor],
  ['Atomics[@@toStringTag]', AtomicsSymbolToStringTag],
  ['BigInt', BigInt],
  ['BigInt.asIntN', BigIntAsIntN],
  ['BigInt.asUintN', BigIntAsUintN],
  ['BigInt.prototype', BigIntPrototype],
  ['BigInt.prototype.toLocaleString', BigIntPrototypeToLocaleString],
  ['BigInt.prototype.toString', BigIntPrototypeToString],
  ['BigInt.prototype.valueOf', BigIntPrototypeValueOf],
  ['BigInt.prototype[@@toStringTag]', BigIntPrototypeSymbolToStringTag],
  ['BigInt64Array', BigInt64Array],
  ['BigInt64Array.BYTES_PER_ELEMENT', BigInt64ArrayBYTES_PER_ELEMENT],
  ['BigInt64Array.prototype', BigInt64ArrayPrototype],
  ['BigUint64Array', BigUint64Array],
  ['BigUint64Array.BYTES_PER_ELEMENT', BigUint64ArrayBYTES_PER_ELEMENT],
  ['BigUint64Array.prototype', BigUint64ArrayPrototype],
  ['Boolean', Boolean],
  ['Boolean.prototype', BooleanPrototype],
  ['Boolean.prototype.toString', BooleanPrototypeToString],
  ['Boolean.prototype.valueOf', BooleanPrototypeValueOf],
  ['DataView', DataView],
  ['DataView.prototype', DataViewPrototype],
  ['get DataView.prototype.buffer', DataViewPrototypeBuffer],
  ['get DataView.prototype.byteLength', DataViewPrototypeByteLength],
  ['get DataView.prototype.byteOffset', DataViewPrototypeByteOffset],
  ['DataView.prototype.getBigInt64', DataViewPrototypeGetBigInt64],
  ['DataView.prototype.getBigUint64', DataViewPrototypeGetBigUint64],
  ['DataView.prototype.getFloat32', DataViewPrototypeGetFloat32],
  ['DataView.prototype.getFloat64', DataViewPrototypeGetFloat64],
  ['DataView.prototype.getInt8', DataViewPrototypeGetInt8],
  ['DataView.prototype.getInt16', DataViewPrototypeGetInt16],
  ['DataView.prototype.getInt32', DataViewPrototypeGetInt32],
  ['DataView.prototype.getUint8', DataViewPrototypeGetUint8],
  ['DataView.prototype.getUint16', DataViewPrototypeGetUint16],
  ['DataView.prototype.getUint32', DataViewPrototypeGetUint32],
  ['DataView.prototype.setBigInt64', DataViewPrototypeSetBigInt64],
  ['DataView.prototype.setBigUint64', DataViewPrototypeSetBigUint64],
  ['DataView.prototype.setFloat32', DataViewPrototypeSetFloat32],
  ['DataView.prototype.setFloat64', DataViewPrototypeSetFloat64],
  ['DataView.prototype.setInt8', DataViewPrototypeSetInt8],
  ['DataView.prototype.setInt16', DataViewPrototypeSetInt16],
  ['DataView.prototype.setInt32', DataViewPrototypeSetInt32],
  ['DataView.prototype.setUint8', DataViewPrototypeSetUint8],
  ['DataView.prototype.setUint16', DataViewPrototypeSetUint16],
  ['DataView.prototype.setUint32', DataViewPrototypeSetUint32],
  ['DataView.prototype[@@toStringTag]', DataViewPrototypeSymbolToStringTag],
  ['Date', Date],
  ['Date.UTC', DateUTC],
  ['Date.now', DateNow],
  ['Date.parse', DateParse],
  ['Date.prototype', DatePrototype],
  ['Date.prototype.getDate', DatePrototypeGetDate],
  ['Date.prototype.getDay', DatePrototypeGetDay],
  ['Date.prototype.getFullYear', DatePrototypeGetFullYear],
  ['Date.prototype.getHours', DatePrototypeGetHours],
  ['Date.prototype.getMilliseconds', DatePrototypeGetMilliseconds],
  ['Date.prototype.getMinutes', DatePrototypeGetMinutes],
  ['Date.prototype.getMonth', DatePrototypeGetMonth],
  ['Date.prototype.getSeconds', DatePrototypeGetSeconds],
  ['Date.prototype.getTime', DatePrototypeGetTime],
  ['Date.prototype.getTimezoneOffset', DatePrototypeGetTimezoneOffset],
  ['Date.prototype.getUTCDate', DatePrototypeGetUTCDate],
  ['Date.prototype.getUTCDay', DatePrototypeGetUTCDay],
  ['Date.prototype.getUTCFullYear', DatePrototypeGetUTCFullYear],
  ['Date.prototype.getUTCHours', DatePrototypeGetUTCHours],
  ['Date.prototype.getUTCMilliseconds', DatePrototypeGetUTCMilliseconds],
  ['Date.prototype.getUTCMinutes', DatePrototypeGetUTCMinutes],
  ['Date.prototype.getUTCMonth', DatePrototypeGetUTCMonth],
  ['Date.prototype.getUTCSeconds', DatePrototypeGetUTCSeconds],
  ['Date.prototype.setDate', DatePrototypeSetDate],
  ['Date.prototype.setFullYear', DatePrototypeSetFullYear],
  ['Date.prototype.setHours', DatePrototypeSetHours],
  ['Date.prototype.setMilliseconds', DatePrototypeSetMilliseconds],
  ['Date.prototype.setMinutes', DatePrototypeSetMinutes],
  ['Date.prototype.setMonth', DatePrototypeSetMonth],
  ['Date.prototype.setSeconds', DatePrototypeSetSeconds],
  ['Date.prototype.setTime', DatePrototypeSetTime],
  ['Date.prototype.setUTCDate', DatePrototypeSetUTCDate],
  ['Date.prototype.setUTCFullYear', DatePrototypeSetUTCFullYear],
  ['Date.prototype.setUTCHours', DatePrototypeSetUTCHours],
  ['Date.prototype.setUTCMilliseconds', DatePrototypeSetUTCMilliseconds],
  ['Date.prototype.setUTCMinutes', DatePrototypeSetUTCMinutes],
  ['Date.prototype.setUTCMonth', DatePrototypeSetUTCMonth],
  ['Date.prototype.setUTCSeconds', DatePrototypeSetUTCSeconds],
  ['Date.prototype.toDateString', DatePrototypeToDateString],
  ['Date.prototype.toISOString', DatePrototypeToISOString],
  ['Date.prototype.toJSON', DatePrototypeToJSON],
  ['Date.prototype.toLocaleDateString', DatePrototypeToLocaleDateString],
  ['Date.prototype.toLocaleString', DatePrototypeToLocaleString],
  ['Date.prototype.toLocaleTimeString', DatePrototypeToLocaleTimeString],
  ['Date.prototype.toString', DatePrototypeToString],
  ['Date.prototype.toTimeString', DatePrototypeToTimeString],
  ['Date.prototype.toUTCString', DatePrototypeToUTCString],
  ['Date.prototype.valueOf', DatePrototypeValueOf],
  ['Date.prototype[@@toPrimitive]', DatePrototypeSymbolToPrimitive],
  ['Error', Error],
  ['Error.prototype', ErrorPrototype],
  ['Error.prototype.toString', ErrorPrototypeToString],
  ['EvalError', EvalError],
  ['EvalError.prototype', EvalErrorPrototype],
  ['FinalizationRegistry', FinalizationRegistry],
  ['FinalizationRegistry.prototype', FinalizationRegistryPrototype],
  ['FinalizationRegistry.prototype.register', FinalizationRegistryPrototypeRegister],
  ['FinalizationRegistry.prototype.unregister', FinalizationRegistryPrototypeUnregister],
  ['FinalizationRegistry.prototype[@@toStringTag]', FinalizationRegistryPrototypeSymbolToStringTag],
  ['Float32Array', Float32Array],
  ['Float32Array.BYTES_PER_ELEMENT', Float32ArrayBYTES_PER_ELEMENT],
  ['Float32Array.prototype', Float32ArrayPrototype],
  ['Float64Array', Float64Array],
  ['Float64Array.BYTES_PER_ELEMENT', Float64ArrayBYTES_PER_ELEMENT],
  ['Float64Array.prototype', Float64ArrayPrototype],
  ['Function', Function],
  ['Function.prototype', FunctionPrototype],
  ['Function.prototype.apply', FunctionPrototypeApply],
  ['Function.prototype.bind', FunctionPrototypeBind],
  ['Function.prototype.call', FunctionPrototypeCall],
  ['Function.prototype.toString', FunctionPrototypeToString],
  ['Function.prototype[@@hasInstance]', FunctionPrototypeSymbolHasInstance],
  ['GeneratorFunction', GeneratorFunction],
  ['GeneratorFunction.prototype', GeneratorFunctionPrototype],
  ['GeneratorFunction.prototype[@@toStringTag]', GeneratorFunctionPrototypeSymbolToStringTag],
  ['GeneratorPrototype', GeneratorPrototype],
  ['GeneratorPrototype.next', GeneratorPrototypeNext],
  ['GeneratorPrototype.return', GeneratorPrototypeReturn],
  ['GeneratorPrototype.throw', GeneratorPrototypeThrow],
  ['GeneratorPrototype[@@toStringTag]', GeneratorPrototypeSymbolToStringTag],
  ['Int8Array', Int8Array],
  ['Int8Array.BYTES_PER_ELEMENT', Int8ArrayBYTES_PER_ELEMENT],
  ['Int8Array.prototype', Int8ArrayPrototype],
  ['Int16Array', Int16Array],
  ['Int16Array.BYTES_PER_ELEMENT', Int16ArrayBYTES_PER_ELEMENT],
  ['Int16Array.prototype', Int16ArrayPrototype],
  ['Int32Array', Int32Array],
  ['Int32Array.BYTES_PER_ELEMENT', Int32ArrayBYTES_PER_ELEMENT],
  ['Int32Array.prototype', Int32ArrayPrototype],
  ['IteratorPrototype', IteratorPrototype],
  ['IteratorPrototype[@@iterator]', IteratorPrototypeSymbolIterator],
  ['JSON', JSON],
  ['JSON.parse', JSONParse],
  ['JSON.stringify', JSONStringify],
  ['JSON[@@toStringTag]', JSONSymbolToStringTag],
  ['Map', Map],
  ['Map.prototype', MapPrototype],
  ['Map.prototype.clear', MapPrototypeClear],
  ['Map.prototype.delete', MapPrototypeDelete],
  ['Map.prototype.entries', MapPrototypeEntries],
  ['Map.prototype.forEach', MapPrototypeForEach],
  ['Map.prototype.get', MapPrototypeGet],
  ['Map.prototype.has', MapPrototypeHas],
  ['Map.prototype.keys', MapPrototypeKeys],
  ['Map.prototype.set', MapPrototypeSet],
  ['get Map.prototype.size', MapPrototypeSize],
  ['Map.prototype.values', MapPrototypeValues],
  ['Map.prototype[@@iterator]', MapPrototypeSymbolIterator],
  ['Map.prototype[@@toStringTag]', MapPrototypeSymbolToStringTag],
  ['MapIteratorPrototype', MapIteratorPrototype],
  ['MapIteratorPrototype.next', MapIteratorPrototypeNext],
  ['MapIteratorPrototype[@@toStringTag]', MapIteratorPrototypeSymbolToStringTag],
  ['Math', Math],
  ['Math.E', MathE],
  ['Math.LN10', MathLN10],
  ['Math.LN2', MathLN2],
  ['Math.LOG10E', MathLOG10E],
  ['Math.LOG2E', MathLOG2E],
  ['Math.PI', MathPI],
  ['Math.SQRT1_2', MathSQRT1_2],
  ['Math.SQRT2', MathSQRT2],
  ['Math.abs', MathAbs],
  ['Math.acos', MathAcos],
  ['Math.acosh', MathAcosh],
  ['Math.asin', MathAsin],
  ['Math.asinh', MathAsinh],
  ['Math.atan', MathAtan],
  ['Math.atanh', MathAtanh],
  ['Math.atan2', MathAtan2],
  ['Math.cbrt', MathCbrt],
  ['Math.ceil', MathCeil],
  ['Math.clz32', MathClz32],
  ['Math.cos', MathCos],
  ['Math.cosh', MathCosh],
  ['Math.exp', MathExp],
  ['Math.expm1', MathExpm1],
  ['Math.floor', MathFloor],
  ['Math.fround', MathFround],
  ['Math.hypot', MathHypot],
  ['Math.imul', MathImul],
  ['Math.log', MathLog],
  ['Math.log1p', MathLog1p],
  ['Math.log10', MathLog10],
  ['Math.log2', MathLog2],
  ['Math.max', MathMax],
  ['Math.min', MathMin],
  ['Math.pow', MathPow],
  ['Math.random', MathRandom],
  ['Math.round', MathRound],
  ['Math.sign', MathSign],
  ['Math.sin', MathSin],
  ['Math.sinh', MathSinh],
  ['Math.sqrt', MathSqrt],
  ['Math.tan', MathTan],
  ['Math.tanh', MathTanh],
  ['Math.trunc', MathTrunc],
  ['Math[@@toStringTag]', MathSymbolToStringTag],
  ['Number', Number],
  ['Number.EPSILON', NumberEPSILON],
  ['Number.MAX_SAFE_INTEGER', NumberMAX_SAFE_INTEGER],
  ['Number.MAX_VALUE', NumberMAX_VALUE],
  ['Number.MIN_SAFE_INTEGER', NumberMIN_SAFE_INTEGER],
  ['Number.MIN_VALUE', NumberMIN_VALUE],
  ['Number.NaN', NumberNaN],
  ['Number.NEGATIVE_INFINITY', NumberNEGATIVE_INFINITY],
  ['Number.POSITIVE_INFINITY', NumberPOSITIVE_INFINITY],
  ['Number.isFinite', NumberIsFinite],
  ['Number.isInteger', NumberIsInteger],
  ['Number.isNaN', NumberIsNaN],
  ['Number.isSafeInteger', NumberIsSafeInteger],
  ['Number.parseFloat', NumberParseFloat],
  ['Number.parseInt', NumberParseInt],
  ['Number.prototype', NumberPrototype],
  ['Number.prototype.toExponential', NumberPrototypeToExponential],
  ['Number.prototype.toFixed', NumberPrototypeToFixed],
  ['Number.prototype.toLocaleString', NumberPrototypeToLocaleString],
  ['Number.prototype.toPrecision', NumberPrototypeToPrecision],
  ['Number.prototype.toString', NumberPrototypeToString],
  ['Number.prototype.valueOf', NumberPrototypeValueOf],
  ['Object', Object],
  ['Object.assign', ObjectAssign],
  ['Object.create', ObjectCreate],
  ['Object.defineProperties', ObjectDefineProperties],
  ['Object.defineProperty', ObjectDefineProperty],
  ['Object.entries', ObjectEntries],
  ['Object.freeze', ObjectFreeze],
  ['Object.fromEntries', ObjectFromEntries],
  ['Object.getOwnPropertyDescriptor', ObjectGetOwnPropertyDescriptor],
  ['Object.getOwnPropertyDescriptors', ObjectGetOwnPropertyDescriptors],
  ['Object.getOwnPropertyNames', ObjectGetOwnPropertyNames],
  ['Object.getOwnPropertySymbols', ObjectGetOwnPropertySymbols],
  ['Object.getPrototypeOf', ObjectGetPrototypeOf],
  ['Object.hasOwn', ObjectHasOwn],
  ['Object.is', ObjectIs],
  ['Object.isExtensible', ObjectIsExtensible],
  ['Object.isFrozen', ObjectIsFrozen],
  ['Object.isSealed', ObjectIsSealed],
  ['Object.keys', ObjectKeys],
  ['Object.preventExtensions', ObjectPreventExtensions],
  ['Object.seal', ObjectSeal],
  ['Object.setPrototypeOf', ObjectSetPrototypeOf],
  ['Object.values', ObjectValues],
  ['Object.prototype', ObjectPrototype],
  ['Object.prototype.hasOwnProperty', ObjectPrototypeHasOwnProperty],
  ['Object.prototype.isPrototypeOf', ObjectPrototypeIsPrototypeOf],
  ['Object.prototype.propertyIsEnumerable', ObjectPrototypePropertyIsEnumerable],
  ['Object.prototype.toLocaleString', ObjectPrototypeToLocaleString],
  ['Object.prototype.toString', ObjectPrototypeToString],
  ['Object.prototype.valueOf', ObjectPrototypeValueOf],
  ['Promise', Promise],
  ['Promise.all', $PromiseAll],
  ['Promise.allSettled', $PromiseAllSettled],
  ['Promise.any', $PromiseAny],
  ['Promise.race', $PromiseRace],
  ['Promise.reject', $PromiseReject],
  ['Promise.resolve', $PromiseResolve],
  ['Promise.prototype', PromisePrototype],
  ['Promise.prototype.catch', PromisePrototypeCatch],
  ['Promise.prototype.finally', PromisePrototypeFinally],
  ['Promise.prototype.then', PromisePrototypeThen],
  ['Promise.prototype[@@toStringTag]', PromisePrototypeSymbolToStringTag],
  ['Proxy', Proxy],
  ['Proxy.revocable', ProxyRevocable],
  ['RangeError', RangeError],
  ['RangeError.prototype', RangeErrorPrototype],
  ['ReferenceError', ReferenceError],
  ['ReferenceError.prototype', ReferenceErrorPrototype],
  ['Reflect', Reflect],
  ['Reflect.apply', ReflectApply],
  ['Reflect.construct', ReflectConstruct],
  ['Reflect.defineProperty', ReflectDefineProperty],
  ['Reflect.deleteProperty', ReflectDeleteProperty],
  ['Reflect.get', ReflectGet],
  ['Reflect.getOwnPropertyDescriptor', ReflectGetOwnPropertyDescriptor],
  ['Reflect.getPrototypeOf', ReflectGetPrototypeOf],
  ['Reflect.has', ReflectHas],
  ['Reflect.isExtensible', ReflectIsExtensible],
  ['Reflect.ownKeys', ReflectOwnKeys],
  ['Reflect.preventExtensions', ReflectPreventExtensions],
  ['Reflect.set', ReflectSet],
  ['Reflect[@@toStringTag]', ReflectSymbolToStringTag],
  ['RegExp', RegExp],
  ['RegExp.prototype', RegExpPrototype],
  ['get RegExp.prototype.dotAll', RegExpPrototypeDotAll],
  ['RegExp.prototype.exec', RegExpPrototypeExec],
  ['get RegExp.prototype.flags', RegExpPrototypeFlags],
  ['get RegExp.prototype.global', RegExpPrototypeGlobal],
  ['get RegExp.prototype.ignoreCase', RegExpPrototypeIgnoreCase],
  ['get RegExp.prototype.multiline', RegExpPrototypeMultiline],
  ['get RegExp.prototype.source', RegExpPrototypeSource],
  ['get RegExp.prototype.sticky', RegExpPrototypeSticky],
  ['RegExp.prototype.test', RegExpPrototypeTest],
  ['RegExp.prototype.toString', RegExpPrototypeToString],
  ['get RegExp.prototype.unicode', RegExpPrototypeUnicode],
  ['RegExp.prototype[@@match]', RegExpPrototypeSymbolMatch],
  ['RegExp.prototype[@@matchAll]', RegExpPrototypeSymbolMatchAll],
  ['RegExp.prototype[@@replace]', RegExpPrototypeSymbolReplace],
  ['RegExp.prototype[@@search]', RegExpPrototypeSymbolSearch],
  ['RegExp.prototype[@@split]', RegExpPrototypeSymbolSplit],
  ['RegExpStringIteratorPrototype', RegExpStringIteratorPrototype],
  ['RegExpStringIteratorPrototype.next', RegExpStringIteratorPrototypeNext],
  ['RegExpStringIteratorPrototype[@@toStringTag]', RegExpStringIteratorPrototypeSymbolToStringTag],
  ['Set', Set],
  ['Set.prototype', SetPrototype],
  ['Set.prototype.add', SetPrototypeAdd],
  ['Set.prototype.clear', SetPrototypeClear],
  ['Set.prototype.delete', SetPrototypeDelete],
  ['Set.prototype.entries', SetPrototypeEntries],
  ['Set.prototype.forEach', SetPrototypeForEach],
  ['Set.prototype.has', SetPrototypeHas],
  ['Set.prototype.keys', SetPrototypeKeys],
  ['get Set.prototype.size', SetPrototypeSize],
  ['Set.prototype.values', SetPrototypeValues],
  ['Set.prototype[@@iterator]', SetPrototypeSymbolIterator],
  ['Set.prototype[@@toStringTag]', SetPrototypeSymbolToStringTag],
  ['SetIteratorPrototype', SetIteratorPrototype],
  ['SetIteratorPrototype.next', SetIteratorPrototypeNext],
  ['SetIteratorPrototype[@@toStringTag]', SetIteratorPrototypeSymbolToStringTag],
  ['SharedArrayBuffer', SharedArrayBuffer],
  ['SharedArrayBuffer.prototype', SharedArrayBufferPrototype],
  ['get SharedArrayBuffer.prototype.byteLength', SharedArrayBufferPrototypeByteLength],
  ['SharedArrayBuffer.prototype.slice', SharedArrayBufferPrototypeSlice],
  ['SharedArrayBuffer.prototype[@@toStringTag]', SharedArrayBufferPrototypeSymbolToStringTag],
  ['String', String],
  ['String.fromCharCode', StringFromCharCode],
  ['String.fromCodePoint', StringFromCodePoint],
  ['String.raw', StringRaw],
  ['String.prototype', StringPrototype],
  ['String.prototype.at', StringPrototypeAt],
  ['String.prototype.charAt', StringPrototypeCharAt],
  ['String.prototype.charCodeAt', StringPrototypeCharCodeAt],
  ['String.prototype.codePointAt', StringPrototypeCodePointAt],
  ['String.prototype.concat', StringPrototypeConcat],
  ['String.prototype.endsWith', StringPrototypeEndsWith],
  ['String.prototype.includes', StringPrototypeIncludes],
  ['String.prototype.indexOf', StringPrototypeIndexOf],
  ['String.prototype.lastIndexOf', StringPrototypeLastIndexOf],
  ['String.prototype.localeCompare', StringPrototypeLocaleCompare],
  ['String.prototype.match', StringPrototypeMatch],
  ['String.prototype.matchAll', StringPrototypeMatchAll],
  ['String.prototype.normalize', StringPrototypeNormalize],
  ['String.prototype.padEnd', StringPrototypePadEnd],
  ['String.prototype.padStart', StringPrototypePadStart],
  ['String.prototype.repeat', StringPrototypeRepeat],
  ['String.prototype.replace', StringPrototypeReplace],
  ['String.prototype.replaceAll', StringPrototypeReplaceAll],
  ['String.prototype.search', StringPrototypeSearch],
  ['String.prototype.slice', StringPrototypeSlice],
  ['String.prototype.split', StringPrototypeSplit],
  ['String.prototype.startsWith', StringPrototypeStartsWith],
  ['String.prototype.substring', StringPrototypeSubstring],
  ['String.prototype.toLocaleLowerCase', StringPrototypeToLocaleLowerCase],
  ['String.prototype.toLocaleUpperCase', StringPrototypeToLocaleUpperCase],
  ['String.prototype.toLowerCase', StringPrototypeToLowerCase],
  ['String.prototype.toString', StringPrototypeToString],
  ['String.prototype.toUpperCase', StringPrototypeToUpperCase],
  ['String.prototype.trim', StringPrototypeTrim],
  ['String.prototype.trimEnd', StringPrototypeTrimEnd],
  ['String.prototype.trimStart', StringPrototypeTrimStart],
  ['String.prototype.valueOf', StringPrototypeValueOf],
  ['String.prototype[@@iterator]', StringPrototypeSymbolIterator],
  ['StringIteratorPrototype', StringIteratorPrototype],
  ['StringIteratorPrototype.next', StringIteratorPrototypeNext],
  ['StringIteratorPrototype[@@toStringTag]', StringIteratorPrototypeSymbolToStringTag],
  ['Symbol', Symbol],
  ['Symbol.asyncIterator', SymbolAsyncIterator],
  ['Symbol.for', SymbolFor],
  ['Symbol.hasInstance', SymbolHasInstance],
  ['Symbol.isConcatSpreadable', SymbolIsConcatSpreadable],
  ['Symbol.iterator', SymbolIterator],
  ['Symbol.keyFor', SymbolKeyFor],
  ['Symbol.match', SymbolMatch],
  ['Symbol.matchAll', SymbolMatchAll],
  ['Symbol.replace', SymbolReplace],
  ['Symbol.search', SymbolSearch],
  ['Symbol.species', SymbolSpecies],
  ['Symbol.split', SymbolSplit],
  ['Symbol.toPrimitive', SymbolToPrimitive],
  ['Symbol.toStringTag', SymbolToStringTag],
  ['Symbol.unscopables', SymbolUnscopables],
  ['Symbol.prototype', SymbolPrototype],
  ['get Symbol.prototype.description', SymbolPrototypeDescription],
  ['Symbol.prototype.toString', SymbolPrototypeToString],
  ['Symbol.prototype.valueOf', SymbolPrototypeValueOf],
  ['Symbol.prototype[@@toPrimitive]', SymbolPrototypeSymbolToPrimitive],
  ['Symbol.prototype[@@toStringTag]', SymbolPrototypeSymbolToStringTag],
  ['SyntaxError', SyntaxError],
  ['SyntaxError.prototype', SyntaxErrorPrototype],
  ['TypedArray', TypedArray],
  ['TypedArray.from', $TypedArrayFrom],
  ['TypedArray.of', $TypedArrayOf],
  ['TypedArray.prototype', TypedArrayPrototype],
  ['TypedArray.prototype.at', TypedArrayPrototypeAt],
  ['get TypedArray.prototype.buffer', TypedArrayPrototypeBuffer],
  ['get TypedArray.prototype.byteLength', TypedArrayPrototypeByteLength],
  ['get TypedArray.prototype.byteOffset', TypedArrayPrototypeByteOffset],
  ['TypedArray.prototype.copyWithin', TypedArrayPrototypeCopyWithin],
  ['TypedArray.prototype.entries', TypedArrayPrototypeEntries],
  ['TypedArray.prototype.every', TypedArrayPrototypeEvery],
  ['TypedArray.prototype.fill', TypedArrayPrototypeFill],
  ['TypedArray.prototype.filter', TypedArrayPrototypeFilter],
  ['TypedArray.prototype.find', TypedArrayPrototypeFind],
  ['TypedArray.prototype.findIndex', TypedArrayPrototypeFindIndex],
  ['TypedArray.prototype.forEach', TypedArrayPrototypeForEach],
  ['TypedArray.prototype.includes', TypedArrayPrototypeIncludes],
  ['TypedArray.prototype.indexOf', TypedArrayPrototypeIndexOf],
  ['TypedArray.prototype.join', TypedArrayPrototypeJoin],
  ['TypedArray.prototype.keys', TypedArrayPrototypeKeys],
  ['TypedArray.prototype.lastIndexOf', TypedArrayPrototypeLastIndexOf],
  ['get TypedArray.prototype.length', TypedArrayPrototypeLength],
  ['TypedArray.prototype.map', TypedArrayPrototypeMap],
  ['TypedArray.prototype.reduce', TypedArrayPrototypeReduce],
  ['TypedArray.prototype.reduceRight', TypedArrayPrototypeReduceRight],
  ['TypedArray.prototype.reverse', TypedArrayPrototypeReverse],
  ['TypedArray.prototype.set', TypedArrayPrototypeSet],
  ['TypedArray.prototype.slice', TypedArrayPrototypeSlice],
  ['TypedArray.prototype.some', TypedArrayPrototypeSome],
  ['TypedArray.prototype.sort', TypedArrayPrototypeSort],
  ['TypedArray.prototype.subarray', TypedArrayPrototypeSubarray],
  ['TypedArray.prototype.toLocaleString', TypedArrayPrototypeToLocaleString],
  ['TypedArray.prototype.toString', TypedArrayPrototypeToString],
  ['TypedArray.prototype.values', TypedArrayPrototypeValues],
  ['TypedArray.prototype[@@iterator]', TypedArrayPrototypeSymbolIterator],
  ['get TypedArray.prototype[@@toStringTag]', TypedArrayPrototypeSymbolToStringTag],
  ['TypeError', TypeError],
  ['TypeError.prototype', TypeErrorPrototype],
  ['Uint8Array', Uint8Array],
  ['Uint8Array.BYTES_PER_ELEMENT', Uint8ArrayBYTES_PER_ELEMENT],
  ['Uint8Array.prototype', Uint8ArrayPrototype],
  ['Uint8ClampedArray', Uint8ClampedArray],
  ['Uint8ClampedArray.BYTES_PER_ELEMENT', Uint8ClampedArrayBYTES_PER_ELEMENT],
  ['Uint8ClampedArray.prototype', Uint8ClampedArrayPrototype],
  ['Uint16Array', Uint16Array],
  ['Uint16Array.BYTES_PER_ELEMENT', Uint16ArrayBYTES_PER_ELEMENT],
  ['Uint16Array.prototype', Uint16ArrayPrototype],
  ['Uint32Array', Uint32Array],
  ['Uint32Array.BYTES_PER_ELEMENT', Uint32ArrayBYTES_PER_ELEMENT],
  ['Uint32Array.prototype', Uint32ArrayPrototype],
  ['URIError', URIError],
  ['URIError.prototype', URIErrorPrototype],
  ['WeakMap', WeakMap],
  ['WeakMap.prototype', WeakMapPrototype],
  ['WeakMap.prototype.delete', WeakMapPrototypeDelete],
  ['WeakMap.prototype.get', WeakMapPrototypeGet],
  ['WeakMap.prototype.has', WeakMapPrototypeHas],
  ['WeakMap.prototype.set', WeakMapPrototypeSet],
  ['WeakMap.prototype[@@toStringTag]', WeakMapPrototypeSymbolToStringTag],
  ['WeakRef', WeakRef],
  ['WeakRef.prototype', WeakRefPrototype],
  ['WeakRef.prototype.deref', WeakRefPrototypeDeref],
  ['WeakRef.prototype[@@toStringTag]', WeakRefPrototypeSymbolToStringTag],
  ['WeakSet', WeakSet],
  ['WeakSet.prototype', WeakSetPrototype],
  ['WeakSet.prototype.add', WeakSetPrototypeAdd],
  ['WeakSet.prototype.delete', WeakSetPrototypeDelete],
  ['WeakSet.prototype.has', WeakSetPrototypeHas],
  ['WeakSet.prototype[@@toStringTag]', WeakSetPrototypeSymbolToStringTag],
  ['decodeURI', decodeURI],
  ['decodeURIComponent', decodeURIComponent],
  ['encodeURI', encodeURI],
  ['encodeURIComponent', encodeURIComponent],
  ['eval', $eval],
  ['globalThis', globalThis],
  ['isFinite', isFinite],
  ['isNaN', isNaN],
  ['parseFloat', parseFloat],
  ['parseInt', parseInt]
], ([name, value]) => {
  SetIntrinsic(name, value);
});

const ALIASES = new Map();

const GetIntrinsicNameByAlias = FunctionBind(MapPrototypeGet, ALIASES);
const SetAlias = FunctionBind(MapPrototypeSet, ALIASES);

ArrayForEach([
  ['@@asyncIterator', 'Symbol.asyncIterator'],
  ['@@hasInstance', 'Symbol.hasInstance'],
  ['@@isConcatSpreadable', 'Symbol.isConcatSpreadable'],
  ['@@iterator', 'Symbol.iterator'],
  ['@@match', 'Symbol.match'],
  ['@@matchAll', 'Symbol.matchAll'],
  ['@@replace', 'Symbol.replace'],
  ['@@search', 'Symbol.search'],
  ['@@species', 'Symbol.species'],
  ['@@split', 'Symbol.split'],
  ['@@toPrimitive', 'Symbol.toPrimitive'],
  ['@@toStringTag', 'Symbol.toStringTag'],
  ['@@unscopables', 'Symbol.unscopables'],
  ['%AggregateError%', 'AggregateError'],
  ['%Array%', 'Array'],
  ['%ArrayBuffer%', 'ArrayBuffer'],
  ['%ArrayIteratorPrototype%', 'ArrayIteratorPrototype'],
  ['%AsyncFromSyncIteratorPrototype%', 'AsyncFromSyncIteratorPrototype'],
  ['%AsyncFunction%', 'AsyncFunction'],
  ['%AsyncGeneratorFunction%', 'AsyncGeneratorFunction'],
  ['%AsyncGeneratorPrototype%', 'AsyncGeneratorPrototype'],
  ['%AsyncIteratorPrototype%', 'AsyncIteratorPrototype'],
  ['%Atomics%', 'Atomics'],
  ['%BigInt%', 'BigInt'],
  ['%BigInt64Array%', 'BigInt64Array'],
  ['%BigUint64Array%', 'BigUint64Array'],
  ['%Boolean%', 'Boolean'],
  ['%DataView%', 'DataView'],
  ['%Date%', 'Date'],
  ['%Error%', 'Error'],
  ['%EvalError%', 'EvalError'],
  ['%FinalizationRegistry%', 'FinalizationRegistry'],
  ['%Float32Array%', 'Float32Array'],
  ['%Float64Array%', 'Float64Array'],
  ['%ForInIteratorPrototype%', 'ForInIteratorPrototype'],
  ['%Function%', 'Function'],
  ['%GeneratorFunction%', 'GeneratorFunction'],
  ['%GeneratorPrototype%', 'GeneratorPrototype'],
  ['%Int8Array%', 'Int8Array'],
  ['%Int16Array%', 'Int16Array'],
  ['%Int32Array%', 'Int32Array'],
  ['%IteratorPrototype%', 'IteratorPrototype'],
  ['%JSON%', 'JSON'],
  ['%Map%', 'Map'],
  ['%MapIteratorPrototype%', 'MapIteratorPrototype'],
  ['%Math%', 'Math'],
  ['%Number%', 'Number'],
  ['%Object%', 'Object'],
  ['%Promise%', 'Promise'],
  ['%Proxy%', 'Proxy'],
  ['%RangeError%', 'RangeError'],
  ['%ReferenceError%', 'ReferenceError'],
  ['%Reflect%', 'Reflect'],
  ['%RegExp%', 'RegExp'],
  ['%RegExpStringIteratorPrototype%', 'RegExpStringIteratorPrototype'],
  ['%Set%', 'Set'],
  ['%SetIteratorPrototype%', 'SetIteratorPrototype'],
  ['%SharedArrayBuffer%', 'SharedArrayBuffer'],
  ['%String%', 'String'],
  ['%StringIteratorPrototype%', 'StringIteratorPrototype'],
  ['%Symbol%', 'Symbol'],
  ['%SyntaxError%', 'SyntaxError'],
  ['%ThrowTypeError%', 'ThrowTypeError'],
  ['%TypedArray%', 'TypedArray'],
  ['%TypeError%', 'TypeError'],
  ['%Uint8Array%', 'Uint8Array'],
  ['%Uint8ClampedArray%', 'Uint8ClampedArray'],
  ['%Uint16Array%', 'Uint16Array'],
  ['%Uint32Array%', 'Uint32Array'],
  ['%URIError%', 'URIError'],
  ['%WeakMap%', 'WeakMap'],
  ['%WeakRef%', 'WeakRef'],
  ['%WeakSet%', 'WeakSet'],
  ['%decodeURI%', 'decodeURI'],
  ['%decodeURIComponent%', 'decodeURIComponent'],
  ['%encodeURI%', 'encodeURI'],
  ['%encodeURIComponent%', 'encodeURIComponent'],
  ['%eval%', 'eval'],
  ['%globalThis%', 'globalThis'],
  ['%isFinite%', 'isFinite'],
  ['%isNaN%', 'isNaN'],
  ['%parseFloat%', 'parseFloat'],
  ['%parseInt%', 'parseInt'],
], ([alias, name]) => {
  SetAlias(alias, name);
});

const RequireIntrinsicName = argument => {
  if (!IsString(argument)) {
    throw new TypeError('`name` is not a string');
  }
  if (!argument.length) {
    throw new RangeError('`name` cannot be empty');
  }
}

const GetIntrinsic = name => {
  RequireIntrinsicName(name);
  const intrinsicName = GetIntrinsicNameByAlias(name);
  return $GetIntrinsic(intrinsicName || name);
}
exports.GetIntrinsic = GetIntrinsic;

const GetIntrinsicOrThrow = name => {
  RequireIntrinsicName(name);
  const intrinsicName = GetIntrinsicNameByAlias(name);
  const intrinsic = $GetIntrinsic(intrinsicName || name);
  if (intrinsic === undefined) {
    throw new TypeError(`Intrinsic${intrinsicName ? ` '${intrinsicName}' for alias` : ''} '${name}' is ${HasIntrinsic(intrinsicName || name) ? 'missing' : 'not defined'}`);
  }
  return intrinsic;
}
exports.GetIntrinsicOrThrow = GetIntrinsicOrThrow;
